# Profile with Kafka (for Docker Compose or when Kafka is running)

# PostgreSQL Database Configuration for Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/collections_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:collections_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:collections_password}

# JPA/Hibernate Configuration for data persistence
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.properties.linger.ms=1
spring.kafka.producer.buffer-memory=33554432

# Consumer Configuration
spring.kafka.consumer.group-id=library-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=500

# Listener Configuration
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.concurrency=3

# Kafka Logging
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN
logging.level.com.example.kafka=DEBUG
