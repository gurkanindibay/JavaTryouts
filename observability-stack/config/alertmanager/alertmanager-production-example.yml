# Production-ready AlertManager configuration example
# Copy this to alertmanager.yml and customize for your environment

global:
  # SMTP server configuration
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@yourcompany.com'
  smtp_auth_username: 'alerts@yourcompany.com'
  smtp_auth_password: 'your_app_password'
  
  # Slack webhook (optional)
  slack_api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'

# Routing configuration
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: 'default-receiver'
  
  # Route critical alerts differently
  routes:
  - match:
      severity: critical
    receiver: 'critical-alerts'
    group_wait: 10s
    repeat_interval: 1h
    
  - match:
      severity: warning
    receiver: 'warning-alerts'
    repeat_interval: 12h
    
  - match:
      alertname: ApplicationDown
    receiver: 'immediate-alerts'
    group_wait: 0s

# Alert receivers
receivers:
  - name: 'default-receiver'
    email_configs:
    - to: 'team@yourcompany.com'
      subject: '{{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
      body: |
        {{ range .Alerts }}
        Alert: {{ .Annotations.summary }}
        Description: {{ .Annotations.description }}
        Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
        {{ end }}

  - name: 'critical-alerts'
    email_configs:
    - to: 'oncall@yourcompany.com'
      subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
      body: |
        CRITICAL ALERT TRIGGERED
        
        {{ range .Alerts }}
        Summary: {{ .Annotations.summary }}
        Description: {{ .Annotations.description }}
        Service: {{ .Labels.service }}
        Instance: {{ .Labels.instance }}
        Severity: {{ .Labels.severity }}
        
        {{ end }}
        
        Please investigate immediately.
    
    slack_configs:
    - channel: '#critical-alerts'
      color: 'danger'
      title: 'üö® Critical Alert: {{ .GroupLabels.alertname }}'
      text: |
        {{ range .Alerts }}
        {{ .Annotations.summary }}
        Service: {{ .Labels.service }}
        {{ end }}

  - name: 'warning-alerts'
    slack_configs:
    - channel: '#monitoring'
      color: 'warning'
      title: '‚ö†Ô∏è Warning: {{ .GroupLabels.alertname }}'
      text: |
        {{ range .Alerts }}
        {{ .Annotations.summary }}
        Service: {{ .Labels.service }}
        {{ end }}

  - name: 'immediate-alerts'
    email_configs:
    - to: 'oncall@yourcompany.com'
      subject: 'üî• IMMEDIATE: Application Down'
    
    slack_configs:
    - channel: '#critical-alerts'
      color: 'danger'
      title: 'üî• Application Down'

# Inhibition rules (prevent spam)
inhibit_rules:
  # Inhibit warning alerts if critical alert for same service is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['service', 'instance']

# Silence example (can be managed via UI)
# silences:
#   - matchers:
#     - name: alertname
#       value: MaintenanceMode
#     starts_at: "2024-01-01T10:00:00Z"
#     ends_at: "2024-01-01T12:00:00Z"
#     created_by: "admin@yourcompany.com"
#     comment: "Scheduled maintenance window"