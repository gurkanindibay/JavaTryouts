receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Host metrics
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      disk:
      filesystem:
      memory:
      network:

processors:
  # Basic processing
  batch:
    timeout: 1s
    send_batch_size: 1024

  # Resource detection
  resourcedetection:
    detectors: [env, system]
    timeout: 5s

  # Memory limiter
  memory_limiter:
    check_interval: 1s
    limit_mib: 512

exporters:
  # Prometheus metrics export
  prometheus:
    endpoint: "0.0.0.0:8889"

  # Tempo traces export
  otlp/tempo:
    endpoint: http://tempo:4317
    tls:
      insecure: true

  # Elasticsearch logs export
  elasticsearch:
    endpoints: [http://elasticsearch:9200]
    logs_index: "otel-logs"
    mapping:
      mode: "ecs"

  # For debugging, we'll keep logging exporter too
  logging:
    verbosity: detailed

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1888

service:
  extensions: [health_check, pprof]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [otlp/tempo, logging]

    metrics:
      receivers: [otlp, hostmetrics]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [prometheus, logging]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [elasticsearch, logging]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
